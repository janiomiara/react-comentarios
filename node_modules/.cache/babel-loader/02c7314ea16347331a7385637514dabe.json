{"ast":null,"code":"var _jsxFileName = \"/Users/janiomiara/Desktop/react-comentarios/src/App.js\";\nimport React from 'react'; // import { comment } from 'postcss-selector-parser';\n\nimport Comments from './Comments';\nimport NewComment from './NewComment';\nimport { database } from './Firebase';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: {},\n      isLoading: false\n    };\n\n    this.sendComment = newcomment => {\n      const id = database.ref().child('comments').push().key;\n      const comments = {};\n      comments[\"comments/\".concat(id)] = {\n        newcomment\n      };\n      database.ref().update(comments);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    this.comment = database.ref('comments');\n    this.comment.on('value', snapshot => {\n      this.setState({\n        comments: snapshot.val(),\n        isLoading: false\n      });\n    });\n    console.log(this.comment);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(NewComment, {\n      sendComment: this.sendComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Comments, {\n      comment: this.state.comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), this.state.isLoading && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Carregando...\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/janiomiara/Desktop/react-comentarios/src/App.js"],"names":["React","Comments","NewComment","database","App","Component","state","comments","isLoading","sendComment","newcomment","id","ref","child","push","key","update","componentDidMount","setState","comment","on","snapshot","val","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAGA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,SAAS,EAAE;AAFL,KADyB;;AAAA,SAKjCC,WALiC,GAKlBC,UAAD,IAAgB;AAC7B,YAAMC,EAAE,GAAGR,QAAQ,CAACS,GAAT,GAAeC,KAAf,CAAqB,UAArB,EAAiCC,IAAjC,GAAwCC,GAAnD;AACA,YAAMR,QAAQ,GAAC,EAAf;AACAA,MAAAA,QAAQ,oBAAaI,EAAb,EAAR,GAA4B;AAC1BD,QAAAA;AAD0B,OAA5B;AAGAP,MAAAA,QAAQ,CAACS,GAAT,GAAeI,MAAf,CAAsBT,QAAtB;AACD,KAZiC;AAAA;;AAclCU,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,QAAL,CAAc;AAACV,MAAAA,SAAS,EAAE;AAAZ,KAAd;AACE,SAAKW,OAAL,GAAehB,QAAQ,CAACS,GAAT,CAAa,UAAb,CAAf;AACA,SAAKO,OAAL,CAAaC,EAAb,CAAgB,OAAhB,EAAwBC,QAAQ,IAAI;AAClC,WAAKH,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAEc,QAAQ,CAACC,GAAT,EADE;AAEZd,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KALD;AAMAe,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,OAAjB;AACH;;AAICM,EAAAA,MAAM,GAAG;AACT,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAE,KAAKhB,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAII,KAAKD,KAAL,CAAWE,SAAX,IAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJ5B,CADF;AAQD;;AArCiC;;AAuClC,eAAeJ,GAAf","sourcesContent":["import React from 'react';\n// import { comment } from 'postcss-selector-parser';\nimport Comments from './Comments';\nimport NewComment from './NewComment';\nimport { database } from './Firebase';\n\n\nclass App extends React.Component {\n state = {\n   comments: {},\n   isLoading: false,\n }\n sendComment = (newcomment) => {\n  const id = database.ref().child('comments').push().key\n  const comments={}\n  comments[`comments/${id}`]= {\n    newcomment\n  }\n  database.ref().update(comments);\n}\n\ncomponentDidMount(){\n  this.setState({isLoading: true})\n    this.comment = database.ref('comments')\n    this.comment.on('value',snapshot => {\n      this.setState({\n        comments: snapshot.val(),\n        isLoading: false,\n      })\n    })\n    console.log(this.comment)\n}\n\n\n\n  render (){\n  return (\n    <div>\n      <NewComment sendComment={this.sendComment}\n      />\n      <Comments comment={this.state.comments}/>\n      { this.state.isLoading && <p>Carregando...</p>}\n    </div>\n  );\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}