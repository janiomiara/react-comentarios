{"ast":null,"code":"var _jsxFileName = \"/Users/janiomiara/Desktop/react-comentarios/src/App.js\";\nimport React from 'react'; // import { comment } from 'postcss-selector-parser';\n\nimport Comments from './Comments';\nimport NewComment from './NewComment';\nimport { database } from './Firebase';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comment: {},\n      isLoading: false\n    };\n\n    this.sendComment = newcomment => {\n      const id = database.ref().child('comments').push().key;\n      const comments = {};\n      comments['comments/' + id] = {\n        newcomment\n      };\n      database.ref().update(comments); //  this.setState({\n      //   comment: [...this.state.comment, newcomment],\n      //  })\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    this.comment = database.ref('comments');\n    this.comment.on('value', snapshot => {\n      this.setState({\n        comment: snapshot.val(),\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(NewComment, {\n      sendComment: this.sendComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Comments, {\n      comment: this.state.comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), this.state.isLoading && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Carregando...\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/janiomiara/Desktop/react-comentarios/src/App.js"],"names":["React","Comments","NewComment","database","App","Component","state","comment","isLoading","sendComment","newcomment","id","ref","child","push","key","comments","update","componentDidMount","setState","on","snapshot","val","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAGA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,SAAS,EAAE;AAFL,KADyB;;AAAA,SAiBjCC,WAjBiC,GAiBlBC,UAAD,IAAgB;AAC7B,YAAMC,EAAE,GAAGR,QAAQ,CAACS,GAAT,GAAeC,KAAf,CAAqB,UAArB,EAAiCC,IAAjC,GAAwCC,GAAnD;AACA,YAAMC,QAAQ,GAAC,EAAf;AACAA,MAAAA,QAAQ,CAAC,cAAYL,EAAb,CAAR,GAA0B;AACxBD,QAAAA;AADwB,OAA1B;AAIAP,MAAAA,QAAQ,CAACS,GAAT,GAAeK,MAAf,CAAsBD,QAAtB,EAP6B,CAQ7B;AACA;AACA;AAEA,KA7BgC;AAAA;;AAMlCE,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,QAAL,CAAc;AAACX,MAAAA,SAAS,EAAE;AAAZ,KAAd;AACE,SAAKD,OAAL,GAAeJ,QAAQ,CAACS,GAAT,CAAa,UAAb,CAAf;AACA,SAAKL,OAAL,CAAaa,EAAb,CAAgB,OAAhB,EAAwBC,QAAQ,IAAI;AAClC,WAAKF,QAAL,CAAc;AACZZ,QAAAA,OAAO,EAAEc,QAAQ,CAACC,GAAT,EADG;AAEZd,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KALD;AAMH;;AAgBCe,EAAAA,MAAM,GAAG;AACT,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAE,KAAKd,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAII,KAAKD,KAAL,CAAWE,SAAX,IAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJ5B,CADF;AAQD;;AAxCiC;;AA0ClC,eAAeJ,GAAf","sourcesContent":["import React from 'react';\n// import { comment } from 'postcss-selector-parser';\nimport Comments from './Comments';\nimport NewComment from './NewComment';\nimport { database } from './Firebase';\n\n\nclass App extends React.Component {\n state = {\n   comment: {},\n   isLoading: false,\n }\n\ncomponentDidMount(){\n  this.setState({isLoading: true})\n    this.comment = database.ref('comments')\n    this.comment.on('value',snapshot => {\n      this.setState({\n        comment: snapshot.val(),\n        isLoading: false,\n      })\n    })\n}\n\n sendComment = (newcomment) => {\n  const id = database.ref().child('comments').push().key\n  const comments={}\n  comments['comments/'+id]= {\n    newcomment\n  }\n\n  database.ref().update(comments)\n  //  this.setState({\n  //   comment: [...this.state.comment, newcomment],\n  //  })\n\n }\n\n  render (){\n  return (\n    <div>\n      <NewComment sendComment={this.sendComment}\n      />\n      <Comments comment={this.state.comment}/>\n      { this.state.isLoading && <p>Carregando...</p>}\n    </div>\n  );\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}